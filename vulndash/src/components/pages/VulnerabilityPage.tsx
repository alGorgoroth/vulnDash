import React, { useState, useEffect } from 'react';
import { useParams, Link } from 'react-router-dom';
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table";

interface VulnerabilityData {
  pluginID: string;
  pluginName: string;
  severity: string;
  cvssScore: string;
  description: string;
  solution: string;
  affectedHosts: HostData[];
}

interface HostData {
  id: string;
  name: string;
  ip: string;
}

const VulnerabilityPage: React.FC = () => {
  const { vulnerabilityId } = useParams<{ vulnerabilityId: string }>();
  const [vulnerabilityData, setVulnerabilityData] = useState<VulnerabilityData | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    const fetchVulnerabilityData = async () => {
      setIsLoading(true);
      setError(null);
      try {
        // Replace this with your actual API endpoint
        const response = await fetch(`/api/vulnerability/${vulnerabilityId}`);
        if (!response.ok) {
          throw new Error('Failed to fetch vulnerability data');
        }
        const data = await response.json();
        setVulnerabilityData(data);
      } catch (err) {
        setError('An error occurred while fetching vulnerability data');
        console.error(err);
      } finally {
        setIsLoading(false);
      }
    };

    fetchVulnerabilityData();
  }, [vulnerabilityId]);

  if (isLoading) {
    return <div>Loading...</div>;
  }

  if (error) {
    return <div>Error: {error}</div>;
  }

  if (!vulnerabilityData) {
    return <div>No vulnerability data found</div>;
  }

  return (
    <div className="p-4 space-y-4">
      <Card>
        <CardHeader>
          <CardTitle>Vulnerability Details</CardTitle>
        </CardHeader>
        <CardContent>
          <p><strong>Plugin ID:</strong> {vulnerabilityData.pluginID}</p>
          <p><strong>Plugin Name:</strong> {vulnerabilityData.pluginName}</p>
          <p><strong>Severity:</strong> {vulnerabilityData.severity}</p>
          <p><strong>CVSS Score:</strong> {vulnerabilityData.cvssScore}</p>
          <p><strong>Description:</strong> {vulnerabilityData.description}</p>
          <p><strong>Solution:</strong> {vulnerabilityData.solution}</p>
        </CardContent>
      </Card>

      <Card>
        <CardHeader>
          <CardTitle>Affected Hosts</CardTitle>
        </CardHeader>
        <CardContent>
          <Table>
            <TableHeader>
              <TableRow>
                <TableHead>Host Name</TableHead>
                <TableHead>IP Address</TableHead>
              </TableRow>
            </TableHeader>
            <TableBody>
              {vulnerabilityData.affectedHosts.map((host) => (
                <TableRow key={host.id}>
                  <TableCell>
                    <Link to={`/host/${host.id}`} className="text-blue-500 hover:underline">
                      {host.name}
                    </Link>
                  </TableCell>
                  <TableCell>{host.ip}</TableCell>
                </TableRow>
              ))}
            </TableBody>
          </Table>
        </CardContent>
      </Card>
    </div>
  );
};

export default VulnerabilityPage;
